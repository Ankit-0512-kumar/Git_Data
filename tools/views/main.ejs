<!DOCTYPE html>


<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PPS</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #50514f;
            margin: 0;
            padding: 0;
            display: flex;
            height: 100vh;
            overflow: hidden;
        }
        
        .container {
            display: flex;
            width: 100%;
        }
        
        .ip-list {
            width: 290px;
            /* Fixed width for IP list */
            padding: 20px;
            overflow-y: auto;
            height: 100%;
            box-sizing: border-box;
            /* Ensure padding is included in width */
        }
        
        .divider {
            width: 2px;
            background-color: #ccc;
            margin-left: 2px;
            margin-right: 2px;
        }
        
        .form-divider {
            width: 100%;
            height: 2px;
            background-color: #ccc;
            margin-top: 10px;
            /* Adjust margin as needed */
            margin-bottom: 10px;
            /* Adjust margin as needed */
        }
        
        .folder-list {
            flex: 1;
            /* Take the remaining space */
            padding: 20px;
            overflow-y: auto;
            height: 100%;
            box-sizing: border-box;
        }
        
        #Folder_Form {
            display: none;
        }
        
        .message {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 18px;
        }
        
        h2 {
            margin-top: 0;
            color: #e8e3e3;
        }
        
        .control-buttons {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            justify-content: space-between;
        }
        
        .control-buttons .arrow {
            font-size: 24px;
            color: white;
            cursor: pointer;
            margin-right: 10px;
            transition: transform 0.1s ease;
        }
        
        .control-buttons .arrow:active,
        .upload-button:active {
            transform: scale(0.9);
        }
        
        .upload-button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: transform 0.1s ease, background-color 0.3s;
        }
        
        .upload-button:hover {
            background-color: #0056b3;
        }
        
        .ip-box {
            margin: 10px;
            padding: 5px;
            display: flex;
            justify-content: space-between;
            width: 200px;
            cursor: pointer;
            color: whitesmoke;
        }
        
        .ip-box:hover {
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            background-color: rgb(128, 128, 128);
        }
        
        .ip-box.selected,
        .folder-box.selected {
            background-color: rgb(171, 165, 165)
        }
        
        .ip-box input[type="radio"] {
            display: none;
        }
        
        .ip-box label {
            position: relative;
            padding-left: 30px;
            cursor: pointer;
            display: flex;
            align-items: center;
        }
        
        .ip-box label::before {
            content: '';
            position: absolute;
            left: 0;
            width: 20px;
            height: 20px;
            border: 2px solid #007bff;
            border-radius: 50%;
            background: #fff;
        }
        
        .ip-box input[type="radio"]:checked+label::before {
            background: #007bff;
        }
        
        .ip-box input[type="radio"]:disabled+label::before {
            background: #bdb9b9;
            border: 2px solid #bdb9b9;
        }
        
        .ip-box input[type="radio"]:checked+label::after {
            content: '‚úî';
            position: absolute;
            left: 5px;
            top: 1px;
            font-size: 18px;
            color: white;
        }
        
        .ip-box input {
            margin-right: 10px;
        }
        
        .ip-box div {
            display: flex;
            align-items: center;
        }
        
        .folder-box {
            margin: 10px;
            padding: 5px;
            display: flex;
            justify-content: space-between;
            cursor: pointer;
            color: whitesmoke;
        }
        
        .folder-box:hover {
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            background-color: rgb(128, 128, 128);
        }
        
        .folder-box label {
            display: flex;
            align-items: center;
            cursor: pointer;
        }
        
        .folder-box label::before {
            content: 'üìÅ';
            margin-right: 10px;
        }
        /* Scrollbar styling */
        
        .ip-list::-webkit-scrollbar,
        .folder-list::-webkit-scrollbar {
            width: 8px;
            /* Set width of the scrollbar */
        }
        
        .ip-list::-webkit-scrollbar-track,
        .folder-list::-webkit-scrollbar-track {
            background: #50514f;
            /* Set background of the scrollbar track */
        }
        
        .ip-list::-webkit-scrollbar-thumb,
        .folder-list::-webkit-scrollbar-thumb {
            background-color: #888;
            /* Set color of the scrollbar thumb */
            border-radius: 1px;
            /* Round the edges of the scrollbar thumb */
            border: 2px solid #f4f4f4;
            /* Add a border around the scrollbar thumb */
        }
        
        .ip-list::-webkit-scrollbar-thumb:hover,
        .folder-list::-webkit-scrollbar-thumb:hover {
            background-color: #555;
            /* Darker color on hover */
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="ip-list">
            <h2>List of IPs</h2>
            <div class="form-divider"></div>
            <form id="ipForm">
                <% ipList.forEach(({ ip,aliance_name, status }) => { %>
                    <div class="ip-box">
                        <div>
                            <input type="radio" id="<%= ip %>" name="ip" value="<%= ip %>">
                            <label for="<%= ip %>"><%= aliance_name %></label>
                        </div>
                        <div>
                            <%= status === 'active' ? '‚úîÔ∏è' : '‚ùå' %>
                        </div>
                    </div>
                    <% }) %>
            </form>
        </div>
        <div class="divider"></div>
        <div class="folder-list">
            <h2>List of Folders</h2>
            <div class="control-buttons">
                <div class="arrow" id="leftArrow">üîô</div>
                <button class="upload-button" id="uploadButton">Upload</button>
            </div>
            <div class="form-divider"></div>
            <form id="Folder_Form">
                <% folderInfo.main_folders.forEach(folder => { %>
                    <div class="folder-box">
                        <div>
                            <label for="<%= folder %>"><%= folder %></label>
                        </div>
                    </div>
                    <% }) %>
            </form>
            <div class="message">
                <p>Please choose an active IP</p>
            </div>
        </div>

    </div>
    <script>
        const {
            ipcRenderer
        } = require('electron');

        const ipBoxes = document.querySelectorAll('.ip-box');
        const folderList = document.querySelector('#Folder_Form');
        const message = document.querySelector('.message');

        ipBoxes.forEach(box => {
            const radio = box.querySelector('input[type="radio"]');
            const status = box.querySelector('div:nth-child(2)').textContent.trim();

            if (status === '‚ùå') {
                radio.disabled = true;
            }

            box.addEventListener('click', () => {
                if (!radio.disabled) {
                    radio.checked = true;
                    ipBoxes.forEach(b => b.classList.remove('selected'));
                    box.classList.add('selected');

                    const checkedIPs = [radio.value];
                    console.log("Selected IPs:", checkedIPs);
                    ipcRenderer.send('selected-ips', checkedIPs);

                    // Show folder list and hide message
                    folderList.style.display = 'block';
                    message.style.display = 'none';
                }
            });
        });

        // Event listeners for folder boxes
        const folderBoxes = document.querySelectorAll('.folder-box');
        folderBoxes.forEach(box => {
            box.addEventListener('click', () => {
                folderBoxes.forEach(b => b.classList.remove('selected'));
                box.classList.add('selected');

                const folderName = box.querySelector('label').textContent.trim();
                console.log("Selected Folder:", folderName);
                ipcRenderer.send('selected-folder', folderName);
            });
        });



        // Event listeners for control buttons
        document.getElementById('leftArrow').addEventListener('click', () => {
            console.log("Left arrow clicked");
            // Add your code here for left arrow action
        });

        document.getElementById('uploadButton').addEventListener('click', () => {
            console.log("Upload button clicked");
            // Add your code here for upload button action
        });
    </script>
</body>

</html>